$date
	Fri Dec  3 20:25:51 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module dual_port_ram_sync $end
$var wire 6 ! addr_a [5:0] $end
$var wire 6 " addr_b [5:0] $end
$var wire 1 # clk $end
$var wire 8 $ din_a [7:0] $end
$var wire 8 % dout_a [7:0] $end
$var wire 8 & dout_b [7:0] $end
$var wire 1 ' we $end
$var reg 6 ( q_addr_a [5:0] $end
$var reg 6 ) q_addr_b [5:0] $end
$upscope $end
$scope module testbench $end
$var reg 1 * clk $end
$var reg 1 + rst $end
$scope module top $end
$var wire 1 * EXCLK $end
$var wire 1 , Rx $end
$var wire 1 + btnC $end
$var wire 1 - clk $end
$var wire 32 . cpu_dbgreg_dout [31:0] $end
$var wire 8 / hci_io_din [7:0] $end
$var wire 1 0 hci_io_wr $end
$var wire 8 1 hci_ram_din [7:0] $end
$var wire 1 2 led $end
$var wire 1 3 ram_en $end
$var wire 8 4 ram_dout [7:0] $end
$var wire 17 5 ram_a [16:0] $end
$var wire 1 6 program_finish $end
$var wire 1 7 hci_ram_wr $end
$var wire 8 8 hci_ram_dout [7:0] $end
$var wire 17 9 hci_ram_a [16:0] $end
$var wire 3 : hci_io_sel [2:0] $end
$var wire 1 ; hci_io_full $end
$var wire 1 < hci_io_en $end
$var wire 8 = hci_io_dout [7:0] $end
$var wire 1 > hci_active_out $end
$var wire 1 ? hci_active $end
$var wire 1 @ cpumc_wr $end
$var wire 8 A cpumc_din [7:0] $end
$var wire 32 B cpumc_a [31:0] $end
$var wire 1 C cpu_rdy $end
$var wire 1 D cpu_ram_wr $end
$var wire 8 E cpu_ram_dout [7:0] $end
$var wire 8 F cpu_ram_din [7:0] $end
$var wire 32 G cpu_ram_a [31:0] $end
$var wire 1 H Tx $end
$var reg 1 I q_hci_io_en $end
$var reg 1 J rst $end
$var reg 1 K rst_delay $end
$scope module cpu0 $end
$var wire 1 - clk_in $end
$var wire 32 L dbgreg_dout [31:0] $end
$var wire 1 M entry_full $end
$var wire 8 N mem_din [7:0] $end
$var wire 1 C rdy_in $end
$var wire 1 O rst_in $end
$var wire 6 P rs_to_alu_type [5:0] $end
$var wire 32 Q rs_to_alu_right_oprand [31:0] $end
$var wire 4 R rs_to_alu_reorder [3:0] $end
$var wire 32 S rs_to_alu_pc [31:0] $end
$var wire 32 T rs_to_alu_left_oprand [31:0] $end
$var wire 32 U rs_to_alu_imm [31:0] $end
$var wire 1 V rs_to_alu_enable $end
$var wire 1 W rs_full $end
$var wire 32 X rob_to_reg_commit_value [31:0] $end
$var wire 4 Y rob_to_reg_commit_reorder [3:0] $end
$var wire 5 Z rob_to_reg_commit_rd [4:0] $end
$var wire 1 [ rob_to_reg_commit_enable $end
$var wire 1 \ rob_to_pc_feedback $end
$var wire 32 ] rob_to_pc_commit_pc [31:0] $end
$var wire 32 ^ rob_to_pc_branch_pc [31:0] $end
$var wire 1 _ rob_to_lsb_store_enable $end
$var wire 1 ` rob_to_lsb_io_read_enable $end
$var wire 4 a rob_to_decode_tail [3:0] $end
$var wire 32 b rob_to_decode_rt_value [31:0] $end
$var wire 1 c rob_to_decode_rt_ready $end
$var wire 32 d rob_to_decode_rs_value [31:0] $end
$var wire 1 e rob_to_decode_rs_ready $end
$var wire 1 f rob_full $end
$var wire 4 g reg_to_decode_rt_reorder [3:0] $end
$var wire 32 h reg_to_decode_rt_data [31:0] $end
$var wire 1 i reg_to_decode_rt_busy $end
$var wire 4 j reg_to_decode_rs_reorder [3:0] $end
$var wire 32 k reg_to_decode_rs_data [31:0] $end
$var wire 1 l reg_to_decode_rs_busy $end
$var wire 1 m pc_to_fetch_predict $end
$var wire 32 n pc_to_fetch_pc [31:0] $end
$var wire 1 o pc_to_fetch_enable $end
$var wire 32 p pc_to_dispatch_req_addr [31:0] $end
$var wire 1 q pc_to_dispatch_req $end
$var wire 1 D mem_wr $end
$var wire 8 r mem_dout [7:0] $end
$var wire 32 s mem_a [31:0] $end
$var wire 4 t lsb_to_rob_store_reorder [3:0] $end
$var wire 1 u lsb_to_rob_store_over $end
$var wire 2 v lsb_to_dispatch_store_style [1:0] $end
$var wire 1 w lsb_to_dispatch_store_req $end
$var wire 32 x lsb_to_dispatch_store_data [31:0] $end
$var wire 32 y lsb_to_dispatch_store_addr [31:0] $end
$var wire 2 z lsb_to_dispatch_load_style [1:0] $end
$var wire 1 { lsb_to_dispatch_load_req $end
$var wire 32 | lsb_to_dispatch_load_addr [31:0] $end
$var wire 1 } lsb_full $end
$var wire 1 ; io_buffer_full $end
$var wire 1 ~ fetch_to_pc_stall $end
$var wire 32 !" fetch_to_pc_last_inst [31:0] $end
$var wire 1 "" fetch_to_pc_last_enable $end
$var wire 1 #" fetch_to_decode_predict $end
$var wire 32 $" fetch_to_decode_pc [31:0] $end
$var wire 32 %" fetch_to_decode_inst [31:0] $end
$var wire 1 &" fetch_to_decode_enable $end
$var wire 1 '" dispatch_to_lsb_store_req_enable $end
$var wire 1 (" dispatch_to_lsb_load_req_enable $end
$var wire 1 )" dispatch_to_lsb_load_data_enable $end
$var wire 32 *" dispatch_to_lsb_load_data [31:0] $end
$var wire 32 +" dispatch_to_fetch_inst [31:0] $end
$var wire 1 ," dispatch_pc_req_enable $end
$var wire 1 -" dispatch_pc_data_enable $end
$var wire 32 ." decode_vk [31:0] $end
$var wire 32 /" decode_vj [31:0] $end
$var wire 6 0" decode_type [5:0] $end
$var wire 1 1" decode_to_rs_assign_enable $end
$var wire 4 2" decode_to_rob_rt_reorder [3:0] $end
$var wire 4 3" decode_to_rob_rs_reorder [3:0] $end
$var wire 1 4" decode_to_rob_predict $end
$var wire 1 5" decode_to_rob_assign_enable $end
$var wire 1 6" decode_to_reg_write_enable $end
$var wire 1 7" decode_to_lsb_assign_enable $end
$var wire 5 8" decode_rt [4:0] $end
$var wire 5 9" decode_rs [4:0] $end
$var wire 4 :" decode_reorder [3:0] $end
$var wire 5 ;" decode_rd [4:0] $end
$var wire 4 <" decode_qk [3:0] $end
$var wire 4 =" decode_qj [3:0] $end
$var wire 32 >" decode_pc [31:0] $end
$var wire 32 ?" decode_imm [31:0] $end
$var wire 32 @" cdb_lsb_broadcast_result [31:0] $end
$var wire 4 A" cdb_lsb_broadcast_reorder [3:0] $end
$var wire 1 B" cdb_lsb_broadcast_io_read $end
$var wire 1 C" cdb_lsb_broadcast_enable $end
$var wire 1 D" cdb_flush_enable $end
$var wire 32 E" cdb_alu_broadcast_result [31:0] $end
$var wire 4 F" cdb_alu_broadcast_reorder [3:0] $end
$var wire 1 G" cdb_alu_broadcast_enable $end
$var wire 32 H" cdb_alu_broadcast_branch [31:0] $end
$scope module ALU $end
$var wire 1 G" out_cdb_broadcast_enable $end
$var wire 4 I" out_cdb_broadcast_reorder [3:0] $end
$var wire 6 J" type [5:0] $end
$var wire 32 K" rt [31:0] $end
$var wire 32 L" rs [31:0] $end
$var wire 4 M" reorder [3:0] $end
$var wire 32 N" pc [31:0] $end
$var wire 1 V in_enable $end
$var wire 32 O" imm [31:0] $end
$var reg 32 P" out_cdb_broadcast_branch [31:0] $end
$var reg 32 Q" out_cdb_broadcast_result [31:0] $end
$upscope $end
$scope module DECODE $end
$var wire 32 R" out_pc [31:0] $end
$var wire 4 S" out_reorder [3:0] $end
$var wire 1 4" out_rob_predict $end
$var wire 1 #" predict $end
$var wire 32 T" pc [31:0] $end
$var wire 6 U" out_type [5:0] $end
$var wire 5 V" out_rt [4:0] $end
$var wire 1 1" out_rs_assign_enable $end
$var wire 5 W" out_rs [4:0] $end
$var wire 4 X" out_rob_rt_reorder [3:0] $end
$var wire 4 Y" out_rob_rs_reorder [3:0] $end
$var wire 1 5" out_rob_assign_enable $end
$var wire 1 6" out_reg_write_enable $end
$var wire 5 Z" out_rd [4:0] $end
$var wire 1 7" out_lsb_assign_enable $end
$var wire 32 [" out_imm [31:0] $end
$var wire 32 \" out_Vk [31:0] $end
$var wire 32 ]" out_Vj [31:0] $end
$var wire 4 ^" out_Qk [3:0] $end
$var wire 4 _" out_Qj [3:0] $end
$var wire 32 `" inst [31:0] $end
$var wire 4 a" in_rob_tail [3:0] $end
$var wire 32 b" in_rob_rt_value [31:0] $end
$var wire 1 c in_rob_rt_ready $end
$var wire 32 c" in_rob_rs_value [31:0] $end
$var wire 1 e in_rob_rs_ready $end
$var wire 4 d" in_reg_rt_reorder [3:0] $end
$var wire 32 e" in_reg_rt_data [31:0] $end
$var wire 1 i in_reg_rt_busy $end
$var wire 4 f" in_reg_rs_reorder [3:0] $end
$var wire 32 g" in_reg_rs_data [31:0] $end
$var wire 1 l in_reg_rs_busy $end
$var wire 1 &" in_decode_enable $end
$scope function get_inst_imm $end
$var reg 32 h" get_inst_imm [31:0] $end
$var reg 32 i" instr [31:0] $end
$upscope $end
$scope function get_inst_type $end
$var reg 6 j" get_inst_type [5:0] $end
$var reg 32 k" inst [31:0] $end
$upscope $end
$upscope $end
$scope module FETCH $end
$var wire 1 l" cache_hit $end
$var wire 32 m" cache_inst [31:0] $end
$var wire 1 - in_clk $end
$var wire 1 C in_rdy $end
$var wire 1 O in_rst $end
$var wire 1 M in_stall $end
$var wire 1 ~ out_pc_fetch_full $end
$var wire 3 n" tail_prev [2:0] $end
$var wire 8 o" pc_index [7:0] $end
$var wire 1 m in_predict $end
$var wire 1 ," in_pc_req_enable $end
$var wire 1 -" in_pc_data_enable $end
$var wire 32 p" in_pc [31:0] $end
$var wire 1 D" in_flush_enable $end
$var wire 1 o in_fetcher_enable $end
$var wire 32 q" in_dispatch_pc_inst [31:0] $end
$var reg 1 r" empty $end
$var reg 3 s" head [2:0] $end
$var reg 3 t" next [2:0] $end
$var reg 1 &" out_decoder_decode_enable $end
$var reg 32 u" out_decoder_pc_addr [31:0] $end
$var reg 32 v" out_decoder_pc_inst [31:0] $end
$var reg 1 #" out_decoder_pc_pre $end
$var reg 32 w" out_dispatch_pc_addr [31:0] $end
$var reg 1 q out_dispatch_pc_requesting $end
$var reg 1 "" out_pc_last_enable $end
$var reg 32 x" out_pc_last_inst [31:0] $end
$var reg 3 y" tail [2:0] $end
$var integer 32 z" cache_iter [31:0] $end
$var integer 32 {" queue_iter [31:0] $end
$upscope $end
$scope module LSB $end
$var wire 1 |" cdb_lsb_broadcast_enable $end
$var wire 4 }" cdb_lsb_broadcast_reorder [3:0] $end
$var wire 32 ~" cdb_lsb_broadcast_result [31:0] $end
$var wire 1 G" in_alu_broadcast_enable $end
$var wire 4 !# in_alu_broadcast_reorder [3:0] $end
$var wire 32 "# in_alu_broadcast_result [31:0] $end
$var wire 1 - in_clk $end
$var wire 4 ## in_decoder_Qj [3:0] $end
$var wire 4 $# in_decoder_Qk [3:0] $end
$var wire 32 %# in_decoder_Vj [31:0] $end
$var wire 32 &# in_decoder_Vk [31:0] $end
$var wire 1 7" in_decoder_assign_enable $end
$var wire 4 '# in_decoder_dest [3:0] $end
$var wire 32 (# in_decoder_imm [31:0] $end
$var wire 6 )# in_decoder_type [5:0] $end
$var wire 1 C in_rdy $end
$var wire 1 O in_rst $end
$var wire 1 } out_capacity_full $end
$var wire 1 *# rob_head_is_store $end
$var wire 1 '" in_store_req_enable $end
$var wire 1 _ in_rob_store_enable $end
$var wire 1 ` in_rob_io_read_commit $end
$var wire 1 (" in_load_req_enable $end
$var wire 1 )" in_load_data_enable $end
$var wire 1 D" in_flush_enable $end
$var wire 32 +# in_dispatch_load_value [31:0] $end
$var wire 32 ,# head_entry_addr [31:0] $end
$var reg 1 -# entry_empty $end
$var reg 4 .# entry_head [3:0] $end
$var reg 4 /# entry_tail [3:0] $end
$var reg 1 0# io_misbranched $end
$var reg 4 1# last_load_dest [3:0] $end
$var reg 1 2# last_load_io $end
$var reg 6 3# last_load_type [5:0] $end
$var reg 1 C" out_cdb_broadcast_enable $end
$var reg 1 B" out_cdb_io_read $end
$var reg 4 4# out_cdb_reorder [3:0] $end
$var reg 32 5# out_cdb_result [31:0] $end
$var reg 32 6# out_dispatch_load_addr [31:0] $end
$var reg 1 { out_dispatch_load_requesting $end
$var reg 2 7# out_dispatch_load_style [1:0] $end
$var reg 32 8# out_dispatch_store_addr [31:0] $end
$var reg 1 w out_dispatch_store_requesting $end
$var reg 2 9# out_dispatch_store_style [1:0] $end
$var reg 32 :# out_dispatch_store_value [31:0] $end
$var reg 1 u out_rob_store_over $end
$var reg 4 ;# out_rob_store_reorder [3:0] $end
$var reg 1 <# queue_empty $end
$var reg 4 =# queue_head [3:0] $end
$var reg 4 ># queue_tail [3:0] $end
$var reg 1 ?# store_stall $end
$var reg 1 @# store_wait $end
$var integer 32 A# alu_iter [31:0] $end
$var integer 32 B# iter [31:0] $end
$var integer 32 C# lsb_iter [31:0] $end
$scope function is_load $end
$var reg 1 D# is_load $end
$var reg 6 E# type [5:0] $end
$upscope $end
$scope function is_store $end
$var reg 1 F# is_store $end
$var reg 6 G# type [5:0] $end
$upscope $end
$upscope $end
$scope module MEM_CTRL $end
$var wire 1 H# dbg_output_store $end
$var wire 1 - in_clk $end
$var wire 32 I# in_load_addr [31:0] $end
$var wire 1 { in_load_requesting $end
$var wire 2 J# in_load_style [1:0] $end
$var wire 8 K# in_mem_data [7:0] $end
$var wire 32 L# in_pc_addr [31:0] $end
$var wire 1 q in_pc_requesting $end
$var wire 1 C in_rdy $end
$var wire 1 O in_rst $end
$var wire 32 M# in_store_addr [31:0] $end
$var wire 1 w in_store_requesting $end
$var wire 2 N# in_store_style [1:0] $end
$var wire 32 O# in_store_value [31:0] $end
$var wire 1 (" out_load_req_enable $end
$var wire 1 ," out_pc_req_enable $end
$var wire 1 '" out_store_req_enable $end
$var wire 1 ; io_buffer_full $end
$var wire 1 D" in_flush_enable $end
$var reg 24 P# buffer_data [23:0] $end
$var reg 1 Q# load_buffering $end
$var reg 32 R# load_request_addr [31:0] $end
$var reg 2 S# load_request_style [1:0] $end
$var reg 3 T# mem_cycle [2:0] $end
$var reg 3 U# mem_status [2:0] $end
$var reg 1 )" out_load_data_enable $end
$var reg 32 V# out_load_value [31:0] $end
$var reg 32 W# out_mem_addr [31:0] $end
$var reg 8 X# out_mem_data [7:0] $end
$var reg 1 D out_mem_wr_signal $end
$var reg 1 -" out_pc_data_enable $end
$var reg 32 Y# out_pc_inst [31:0] $end
$var reg 1 Z# pc_buffering $end
$var reg 32 [# pc_request_addr [31:0] $end
$var reg 3 \# push_cycle [2:0] $end
$var reg 3 ]# push_status [2:0] $end
$var reg 1 ^# store_buffering $end
$var reg 32 _# store_request_addr [31:0] $end
$var reg 32 `# store_request_data [31:0] $end
$var reg 2 a# store_request_style [1:0] $end
$var reg 2 b# store_stage [1:0] $end
$upscope $end
$scope module PC_CTRL $end
$var wire 1 - in_clk $end
$var wire 1 "" in_fetcher_last_enable $end
$var wire 32 c# in_fetcher_last_inst [31:0] $end
$var wire 1 C in_rdy $end
$var wire 1 O in_rst $end
$var wire 1 d# in_stall $end
$var wire 32 e# jal_imm [31:0] $end
$var wire 32 f# in_rob_commit_pc [31:0] $end
$var wire 32 g# in_rob_branch_pc [31:0] $end
$var wire 1 D" in_flush_enable $end
$var wire 1 \ in_feedback_enable $end
$var wire 32 h# branch_imm [31:0] $end
$var reg 1 i# last_enable $end
$var reg 32 j# last_inst [31:0] $end
$var reg 32 k# last_pc_add_4 [31:0] $end
$var reg 1 o out_fetcher_enable $end
$var reg 32 l# out_fetcher_pc [31:0] $end
$var reg 1 m out_fetcher_predict $end
$var integer 32 m# iter [31:0] $end
$upscope $end
$scope module REG_FILE $end
$var wire 1 - in_clk $end
$var wire 5 n# in_decoder_rd [4:0] $end
$var wire 4 o# in_decoder_rd_reorder [3:0] $end
$var wire 5 p# in_decoder_rs [4:0] $end
$var wire 5 q# in_decoder_rt [4:0] $end
$var wire 1 6" in_decoder_write_enable $end
$var wire 1 C in_rdy $end
$var wire 1 O in_rst $end
$var wire 1 l out_decoder_rs_busy $end
$var wire 32 r# out_decoder_rs_data [31:0] $end
$var wire 4 s# out_decoder_rs_reorder [3:0] $end
$var wire 1 i out_decoder_rt_busy $end
$var wire 32 t# out_decoder_rt_data [31:0] $end
$var wire 4 u# out_decoder_rt_reorder [3:0] $end
$var wire 4 v# in_rob_reorder [3:0] $end
$var wire 32 w# in_rob_rd_value [31:0] $end
$var wire 5 x# in_rob_rd_addr [4:0] $end
$var wire 1 [ in_rob_commit_enable $end
$var wire 1 D" in_flush_enable $end
$var integer 32 y# iter [31:0] $end
$upscope $end
$scope module ROB $end
$var wire 32 z# dbg_head_pc [31:0] $end
$var wire 1 {# dbg_head_predict $end
$var wire 6 |# dbg_head_tp [5:0] $end
$var wire 32 }# dbg_head_value [31:0] $end
$var wire 32 ~# in_alu_broadcast_branch [31:0] $end
$var wire 1 G" in_alu_broadcast_enable $end
$var wire 4 !$ in_alu_broadcast_reorder [3:0] $end
$var wire 32 "$ in_alu_broadcast_result [31:0] $end
$var wire 1 - in_clk $end
$var wire 1 5" in_decoder_assign_enable $end
$var wire 32 #$ in_decoder_pc [31:0] $end
$var wire 1 4" in_decoder_predict $end
$var wire 5 $$ in_decoder_rd [4:0] $end
$var wire 4 %$ in_decoder_rs_reorder [3:0] $end
$var wire 4 &$ in_decoder_rt_reorder [3:0] $end
$var wire 6 '$ in_decoder_type [5:0] $end
$var wire 1 B" in_lsb_braodcast_io_read $end
$var wire 1 C" in_lsb_broadcast_enable $end
$var wire 4 ($ in_lsb_broadcast_reorder [3:0] $end
$var wire 32 )$ in_lsb_broadcast_result [31:0] $end
$var wire 1 u in_lsb_store_over $end
$var wire 4 *$ in_lsb_store_reorder [3:0] $end
$var wire 1 C in_rdy $end
$var wire 1 +$ in_rst $end
$var wire 1 f out_capacity_full $end
$var wire 1 e out_decoder_rs_ready $end
$var wire 32 ,$ out_decoder_rs_value [31:0] $end
$var wire 1 c out_decoder_rt_ready $end
$var wire 32 -$ out_decoder_rt_value [31:0] $end
$var wire 4 .$ out_decoder_tail [3:0] $end
$var wire 1 _ out_lsb_store_enable $end
$var wire 4 /$ head_next [3:0] $end
$var wire 1 0$ dbg_commit_reg_s6 $end
$var wire 1 1$ dbg_commit_reg_s4 $end
$var wire 1 2$ dbg_commit_reg_s11 $end
$var wire 1 3$ dbg_commit_reg_s1 $end
$var wire 1 4$ dbg_commit_reg_s0 $end
$var wire 1 5$ dbg_commit_reg_a6 $end
$var wire 1 6$ dbg_commit_reg_a5 $end
$var wire 1 7$ dbg_commit_reg_a3 $end
$var wire 1 8$ dbg_commit_reg_a1 $end
$var wire 1 9$ dbg_commit_reg_a0 $end
$var reg 1 :$ empty $end
$var reg 4 ;$ head [3:0] $end
$var reg 32 <$ inst_counter [31:0] $end
$var reg 1 D" out_flush_enable $end
$var reg 1 ` out_lsb_io_read_commit $end
$var reg 32 =$ out_pc_branch_pc [31:0] $end
$var reg 32 >$ out_pc_commit_pc [31:0] $end
$var reg 1 \ out_pc_feedback_enable $end
$var reg 1 [ out_reg_commit_enable $end
$var reg 5 ?$ out_reg_commit_rd [4:0] $end
$var reg 4 @$ out_reg_commit_reorder [3:0] $end
$var reg 32 A$ out_reg_commit_value [31:0] $end
$var reg 4 B$ tail [3:0] $end
$var integer 32 C$ iter [31:0] $end
$scope function is_branch $end
$var reg 1 D$ is_branch $end
$var reg 6 E$ type [5:0] $end
$upscope $end
$scope function is_load $end
$var reg 1 F$ is_load $end
$var reg 6 G$ type [5:0] $end
$upscope $end
$scope function is_store $end
$var reg 1 H$ is_store $end
$var reg 6 I$ type [5:0] $end
$upscope $end
$upscope $end
$scope module RS $end
$var wire 1 G" in_alu_broadcast_enable $end
$var wire 4 J$ in_alu_broadcast_reorder [3:0] $end
$var wire 32 K$ in_alu_broadcast_result [31:0] $end
$var wire 1 - in_clk $end
$var wire 4 L$ in_decoder_Qj [3:0] $end
$var wire 4 M$ in_decoder_Qk [3:0] $end
$var wire 32 N$ in_decoder_Vj [31:0] $end
$var wire 32 O$ in_decoder_Vk [31:0] $end
$var wire 1 1" in_decoder_assign_enable $end
$var wire 4 P$ in_decoder_dest [3:0] $end
$var wire 32 Q$ in_decoder_imm [31:0] $end
$var wire 32 R$ in_decoder_pc_addr [31:0] $end
$var wire 6 S$ in_decoder_type [5:0] $end
$var wire 1 C" in_lsb_broadcast_enable $end
$var wire 4 T$ in_lsb_broadcast_reorder [3:0] $end
$var wire 32 U$ in_lsb_broadcast_result [31:0] $end
$var wire 1 C in_rdy $end
$var wire 1 V$ in_rst $end
$var wire 4 W$ ready_index [3:0] $end
$var wire 1 W out_capacity_full $end
$var wire 4 X$ assign_index [3:0] $end
$var reg 4 Y$ out_alu_dest [3:0] $end
$var reg 1 V out_alu_enable $end
$var reg 32 Z$ out_alu_imm [31:0] $end
$var reg 32 [$ out_alu_left_oprand [31:0] $end
$var reg 32 \$ out_alu_pc [31:0] $end
$var reg 32 ]$ out_alu_right_oprand [31:0] $end
$var reg 6 ^$ out_alu_type [5:0] $end
$var integer 32 _$ alu_iter [31:0] $end
$var integer 32 `$ iter [31:0] $end
$var integer 32 a$ lsb_iter [31:0] $end
$scope begin ready_assign[1] $end
$upscope $end
$scope begin ready_assign[2] $end
$upscope $end
$scope begin ready_assign[3] $end
$upscope $end
$scope begin ready_assign[4] $end
$upscope $end
$scope begin ready_assign[5] $end
$upscope $end
$scope begin ready_assign[6] $end
$upscope $end
$scope begin ready_assign[7] $end
$upscope $end
$scope begin ready_assign[8] $end
$upscope $end
$scope begin ready_assign[9] $end
$upscope $end
$scope begin ready_assign[10] $end
$upscope $end
$scope begin ready_assign[11] $end
$upscope $end
$scope begin ready_assign[12] $end
$upscope $end
$scope begin ready_assign[13] $end
$upscope $end
$scope begin ready_assign[14] $end
$upscope $end
$scope begin ready_assign[15] $end
$upscope $end
$upscope $end
$upscope $end
$scope module hci0 $end
$var wire 1 - clk $end
$var wire 32 b$ cpu_dbgreg_din [31:0] $end
$var wire 8 c$ io_din [7:0] $end
$var wire 1 < io_en $end
$var wire 1 ; io_full $end
$var wire 3 d$ io_sel [2:0] $end
$var wire 1 0 io_wr $end
$var wire 17 e$ ram_a [16:0] $end
$var wire 8 f$ ram_din [7:0] $end
$var wire 8 g$ ram_dout [7:0] $end
$var wire 1 J rst $end
$var wire 1 , rx $end
$var wire 1 h$ tx_full $end
$var wire 1 H tx $end
$var wire 1 i$ rx_empty $end
$var wire 8 j$ rd_data [7:0] $end
$var wire 1 k$ parity_err $end
$var wire 8 l$ io_in_rd_data [7:0] $end
$var wire 1 m$ io_in_full $end
$var wire 1 n$ io_in_empty $end
$var wire 8 o$ io_dout [7:0] $end
$var wire 32 p$ d_cpu_cycle_cnt [31:0] $end
$var wire 1 > active $end
$var reg 17 q$ d_addr [16:0] $end
$var reg 3 r$ d_decode_cnt [2:0] $end
$var reg 2 s$ d_err_code [1:0] $end
$var reg 17 t$ d_execute_cnt [16:0] $end
$var reg 8 u$ d_io_dout [7:0] $end
$var reg 8 v$ d_io_in_wr_data [7:0] $end
$var reg 1 w$ d_io_in_wr_en $end
$var reg 1 x$ d_program_finish $end
$var reg 5 y$ d_state [4:0] $end
$var reg 8 z$ d_tx_data [7:0] $end
$var reg 1 {$ d_wr_en $end
$var reg 1 |$ io_in_rd_en $end
$var reg 1 6 program_finish $end
$var reg 17 }$ q_addr [16:0] $end
$var reg 32 ~$ q_cpu_cycle_cnt [31:0] $end
$var reg 3 !% q_decode_cnt [2:0] $end
$var reg 2 "% q_err_code [1:0] $end
$var reg 17 #% q_execute_cnt [16:0] $end
$var reg 8 $% q_io_dout [7:0] $end
$var reg 1 %% q_io_en $end
$var reg 8 &% q_io_in_wr_data [7:0] $end
$var reg 1 '% q_io_in_wr_en $end
$var reg 5 (% q_state [4:0] $end
$var reg 8 )% q_tx_data [7:0] $end
$var reg 1 *% q_wr_en $end
$var reg 1 7 ram_wr $end
$var reg 1 +% rd_en $end
$scope module io_in_fifo $end
$var wire 10 ,% addr_bits_wide_1 [9:0] $end
$var wire 1 - clk $end
$var wire 1 -% d_empty $end
$var wire 1 .% d_full $end
$var wire 1 n$ empty $end
$var wire 1 m$ full $end
$var wire 8 /% rd_data [7:0] $end
$var wire 1 |$ rd_en $end
$var wire 1 0% rd_en_prot $end
$var wire 1 J reset $end
$var wire 8 1% wr_data [7:0] $end
$var wire 1 '% wr_en $end
$var wire 1 2% wr_en_prot $end
$var wire 10 3% d_wr_ptr [9:0] $end
$var wire 10 4% d_rd_ptr [9:0] $end
$var wire 8 5% d_data [7:0] $end
$var reg 1 6% q_empty $end
$var reg 1 7% q_full $end
$var reg 10 8% q_rd_ptr [9:0] $end
$var reg 10 9% q_wr_ptr [9:0] $end
$upscope $end
$scope module uart_blk $end
$var wire 1 - clk $end
$var wire 1 :% d_rx_parity_err $end
$var wire 1 k$ parity_err $end
$var wire 1 +% rd_en $end
$var wire 1 J reset $end
$var wire 1 , rx $end
$var wire 8 ;% tx_data [7:0] $end
$var wire 1 *% wr_en $end
$var wire 1 h$ tx_full $end
$var wire 8 <% tx_fifo_rd_data [7:0] $end
$var wire 1 =% tx_fifo_empty $end
$var wire 1 >% tx_done_tick $end
$var wire 1 H tx $end
$var wire 1 ?% rx_parity_err $end
$var wire 8 @% rx_fifo_wr_data [7:0] $end
$var wire 1 i$ rx_empty $end
$var wire 1 A% rx_done_tick $end
$var wire 8 B% rx_data [7:0] $end
$var wire 1 C% baud_clk_tick $end
$var reg 1 D% q_rx_parity_err $end
$scope module uart_baud_clk_blk $end
$var wire 1 - clk $end
$var wire 1 J reset $end
$var wire 16 E% d_cnt [15:0] $end
$var wire 1 C% baud_clk_tick $end
$var reg 16 F% q_cnt [15:0] $end
$upscope $end
$scope module uart_rx_blk $end
$var wire 1 C% baud_clk_tick $end
$var wire 1 - clk $end
$var wire 1 J reset $end
$var wire 1 , rx $end
$var wire 8 G% rx_data [7:0] $end
$var wire 1 A% rx_done_tick $end
$var wire 1 ?% parity_err $end
$var reg 8 H% d_data [7:0] $end
$var reg 3 I% d_data_bit_idx [2:0] $end
$var reg 1 J% d_done_tick $end
$var reg 4 K% d_oversample_tick_cnt [3:0] $end
$var reg 1 L% d_parity_err $end
$var reg 5 M% d_state [4:0] $end
$var reg 8 N% q_data [7:0] $end
$var reg 3 O% q_data_bit_idx [2:0] $end
$var reg 1 A% q_done_tick $end
$var reg 4 P% q_oversample_tick_cnt [3:0] $end
$var reg 1 ?% q_parity_err $end
$var reg 1 Q% q_rx $end
$var reg 5 R% q_state [4:0] $end
$upscope $end
$scope module uart_rx_fifo $end
$var wire 3 S% addr_bits_wide_1 [2:0] $end
$var wire 1 - clk $end
$var wire 1 T% d_empty $end
$var wire 1 U% d_full $end
$var wire 1 i$ empty $end
$var wire 1 V% full $end
$var wire 8 W% rd_data [7:0] $end
$var wire 1 +% rd_en $end
$var wire 1 X% rd_en_prot $end
$var wire 1 J reset $end
$var wire 8 Y% wr_data [7:0] $end
$var wire 1 A% wr_en $end
$var wire 1 Z% wr_en_prot $end
$var wire 3 [% d_wr_ptr [2:0] $end
$var wire 3 \% d_rd_ptr [2:0] $end
$var wire 8 ]% d_data [7:0] $end
$var reg 1 ^% q_empty $end
$var reg 1 _% q_full $end
$var reg 3 `% q_rd_ptr [2:0] $end
$var reg 3 a% q_wr_ptr [2:0] $end
$upscope $end
$scope module uart_tx_blk $end
$var wire 1 C% baud_clk_tick $end
$var wire 1 - clk $end
$var wire 1 J reset $end
$var wire 1 H tx $end
$var wire 1 >% tx_done_tick $end
$var wire 1 b% tx_start $end
$var wire 8 c% tx_data [7:0] $end
$var reg 4 d% d_baud_clk_tick_cnt [3:0] $end
$var reg 8 e% d_data [7:0] $end
$var reg 3 f% d_data_bit_idx [2:0] $end
$var reg 1 g% d_parity_bit $end
$var reg 5 h% d_state [4:0] $end
$var reg 1 i% d_tx $end
$var reg 1 j% d_tx_done_tick $end
$var reg 4 k% q_baud_clk_tick_cnt [3:0] $end
$var reg 8 l% q_data [7:0] $end
$var reg 3 m% q_data_bit_idx [2:0] $end
$var reg 1 n% q_parity_bit $end
$var reg 5 o% q_state [4:0] $end
$var reg 1 p% q_tx $end
$var reg 1 >% q_tx_done_tick $end
$upscope $end
$scope module uart_tx_fifo $end
$var wire 10 q% addr_bits_wide_1 [9:0] $end
$var wire 1 - clk $end
$var wire 1 r% d_empty $end
$var wire 1 s% d_full $end
$var wire 1 =% empty $end
$var wire 1 h$ full $end
$var wire 8 t% rd_data [7:0] $end
$var wire 1 >% rd_en $end
$var wire 1 u% rd_en_prot $end
$var wire 1 J reset $end
$var wire 8 v% wr_data [7:0] $end
$var wire 1 *% wr_en $end
$var wire 1 w% wr_en_prot $end
$var wire 10 x% d_wr_ptr [9:0] $end
$var wire 10 y% d_rd_ptr [9:0] $end
$var wire 8 z% d_data [7:0] $end
$var reg 1 {% q_empty $end
$var reg 1 |% q_full $end
$var reg 10 }% q_rd_ptr [9:0] $end
$var reg 10 ~% q_wr_ptr [9:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module ram0 $end
$var wire 17 !& a_in [16:0] $end
$var wire 1 - clk_in $end
$var wire 8 "& d_in [7:0] $end
$var wire 1 3 en_in $end
$var wire 1 #& r_nw_in $end
$var wire 1 $& ram_bram_we $end
$var wire 8 %& ram_bram_dout [7:0] $end
$var wire 8 && d_out [7:0] $end
$scope module ram_bram $end
$var wire 17 '& addr_a [16:0] $end
$var wire 1 - clk $end
$var wire 8 (& din_a [7:0] $end
$var wire 8 )& dout_a [7:0] $end
$var wire 1 $& we $end
$var reg 17 *& q_addr_a [16:0] $end
$var integer 32 +& i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000000000000000 +&
bx *&
bx )&
bx (&
bx '&
bx &&
bx %&
x$&
x#&
bx "&
bx !&
bx ~%
bx }%
x|%
x{%
bx z%
bx y%
bx x%
xw%
bx v%
0u%
bx t%
xs%
xr%
b1 q%
1p%
b1 o%
0n%
b0 m%
b0 l%
b0 k%
0j%
1i%
b1 h%
0g%
b0 f%
b0 e%
b0 d%
bx c%
xb%
bx a%
bx `%
x_%
x^%
bx ]%
bx \%
bx [%
0Z%
b0 Y%
0X%
bx W%
xV%
xU%
xT%
b1 S%
b1 R%
1Q%
b0 P%
b0 O%
b0 N%
b1 M%
0L%
b0 K%
0J%
b0 I%
b0 H%
b0 G%
b0 F%
b1 E%
0D%
0C%
bx B%
0A%
b0 @%
0?%
0>%
x=%
bx <%
bx ;%
0:%
bx 9%
bx 8%
x7%
x6%
bx 5%
bx 4%
bx 3%
x2%
bx 1%
00%
bx /%
x.%
x-%
b1 ,%
0+%
x*%
bx )%
bx (%
x'%
bx &%
x%%
bx $%
bx #%
bx "%
bx !%
bx ~$
bx }$
0|$
0{$
b0 z$
bx y$
0x$
0w$
b0 v$
b0 u$
bx t$
bx s$
bx r$
bx q$
bx p$
bx o$
xn$
xm$
bx l$
0k$
bx j$
xi$
xh$
bx g$
bx f$
bx e$
bx d$
bx c$
bz b$
bx a$
bx `$
bx _$
bx ^$
bx ]$
bx \$
bx [$
bx Z$
bx Y$
bx X$
bx W$
1V$
bx U$
bx T$
bx S$
bx R$
bx Q$
bx P$
bx O$
bx N$
bx M$
bx L$
bx K$
bx J$
bx I$
xH$
bx G$
xF$
bx E$
xD$
bx C$
bx B$
bx A$
bx @$
bx ?$
bx >$
bx =$
b0 <$
bx ;$
x:$
x9$
x8$
x7$
x6$
x5$
x4$
x3$
x2$
x1$
x0$
bx /$
bx .$
bx -$
bx ,$
1+$
bx *$
bx )$
bx ($
bx '$
bx &$
bx %$
bx $$
bx #$
bx "$
bx !$
bx ~#
bx }#
bx |#
x{#
bx z#
bx y#
bx x#
bx w#
bx v#
bx u#
bx t#
bx s#
bx r#
bx q#
bx p#
bx o#
bx n#
bx m#
bx l#
bx k#
bx j#
xi#
bx0 h#
bx g#
bx f#
bx0 e#
xd#
bx c#
bx b#
bx a#
bx `#
bx _#
x^#
bx ]#
bx \#
bx [#
xZ#
bx Y#
bx X#
bx W#
bx V#
bx U#
bx T#
bx S#
bx R#
xQ#
bx P#
bx O#
bx N#
bx M#
bx L#
bx K#
bx J#
bx I#
xH#
bx G#
xF#
bx E#
xD#
bx C#
bx B#
bx A#
x@#
x?#
bx >#
bx =#
x<#
bx ;#
bx :#
bx 9#
bx 8#
bx 7#
bx 6#
bx 5#
bx 4#
bx 3#
x2#
bx 1#
x0#
bx /#
bx .#
x-#
bx ,#
bx +#
x*#
bx )#
bx (#
bx '#
bx &#
bx %#
bx $#
bx ##
bx "#
bx !#
bx ~"
bx }"
x|"
bx {"
bx z"
bx y"
bx x"
bx w"
bx v"
bx u"
bx t"
bx s"
xr"
bx q"
bx p"
bx o"
bx n"
bx m"
xl"
bx k"
bx j"
bx i"
bx h"
bx g"
bx f"
bx e"
bx d"
bx c"
bx b"
bx a"
bx `"
bx _"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
xG"
bx F"
bx E"
xD"
xC"
xB"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
x7"
x6"
x5"
x4"
bx 3"
bx 2"
x1"
bx 0"
bx /"
bx ."
x-"
x,"
bx +"
bx *"
x)"
x("
x'"
x&"
bx %"
bx $"
x#"
x""
bx !"
x~
x}
bx |
x{
bx z
bx y
bx x
xw
bx v
xu
bx t
bx s
bx r
xq
bx p
xo
bx n
xm
xl
bx k
bx j
xi
bx h
bx g
xf
xe
bx d
xc
bx b
bx a
x`
x_
bx ^
bx ]
x\
x[
bx Z
bx Y
bx X
xW
xV
bx U
bx T
bx S
bx R
bx Q
bx P
1O
bx N
xM
bz L
1K
1J
xI
1H
bx G
bx F
bx E
xD
1C
bx B
bx A
x@
0?
x>
bx =
x<
x;
bx :
bx 9
bx 8
07
x6
bx 5
bx 4
x3
02
bx 1
x0
bx /
bz .
0-
z,
1+
0*
bx )
bx (
z'
bx &
bx %
bz $
z#
bz "
bz !
$end
#1000
b0 W$
0d#
0M
0W
b1 X$
0f
1-%
0.%
0U%
1T%
1r%
0s%
06"
05"
07"
01"
0~
b111 n"
1,"
0H#
1'"
1("
0}
b0 H"
b0 P"
b0 ~#
b0 E"
b0 Q"
b0 "#
b0 "$
b0 K$
b10 /$
b0 3%
b0 4%
b0 [%
b0 \%
0b%
b0 x%
b0 y%
02%
0w%
b0 s$
b0 q$
b0 t$
b0 r$
b1 y$
b0 p$
0o
b0 k#
0i#
0q
0&"
0""
b0 t"
b0 y"
b0 s"
1r"
0)"
0-"
0^#
0Q#
0Z#
b0 P#
b0 b#
b0 \#
b0 ]#
b0 T#
b0 U#
0|"
0C"
0w
0{
02#
b0 1#
1-#
b0 /#
b0 .#
1<#
b0 >#
b0 =#
0u
0@#
00#
0?#
0G"
0V
0{#
b0 z#
0`
0[
0\
0D"
1:$
b1 :"
b1 S"
b1 '#
b1 o#
b1 P$
b1 a
b1 a"
b1 .$
b1 B$
b1 ;$
0m$
07%
1n$
16%
b0 9%
b0 8%
0V%
0_%
1i$
1^%
b0 a%
b0 `%
0;
0h$
0|%
1=%
1{%
b0 ~%
b0 }%
b0 =
b0 o$
b0 $%
b0 ~$
0%%
b0 &%
b0 1%
0'%
0*%
b0 )%
b0 ;%
b0 v%
b0 "%
b0 9
b0 e$
b0 }$
b0 #%
b0 !%
1>
b1 (%
0K
b10000000000 m#
b100000000 z"
b1000 {"
b10000 B#
b10000 `$
b10000 C$
b100000 y#
0+
1-
1*
#2000
0-
0*
#3000
xV$
x+$
xO
0J
b100000 y#
b10000 C$
b10000 `$
b10000 B#
b100000000 z"
b1000 {"
b10000000000 m#
1-
1*
#4000
0-
0*
#5000
0$&
0<
13
1#&
b0 :
b0 d$
b0 5
b0 !&
b0 '&
0V$
0+$
00
0@
b0 B
0O
b10 E%
0m
b100 k#
b0 n
b0 p"
b0 l#
1o
0D
b0 G
b0 s
b0 W#
06
x%%
zQ%
b1 F%
1-
1*
#6000
0-
0*
#7000
0l"
b110111 F
b110111 N
b110111 K#
b0 n"
b0 o"
b110111 1
b110111 f$
b110111 4
b110111 &&
b11 E%
0I
0%%
0r"
b1 y"
0o
b110111 %&
b110111 )&
b0 *&
b10 F%
1-
1*
#8000
0-
0*
#9000
0,"
b100 E%
b0 p
b0 w"
b0 L#
1q
b11 F%
1-
1*
#10000
0-
0*
#11000
b101 E%
b0 [#
1Z#
0q
b100 F%
1-
1*
#12000
0-
0*
#13000
b110 E%
b1 \#
b1 ]#
b101 F%
1-
1*
#14000
0-
0*
#15000
b1 :
b1 d$
b1 5
b1 !&
b1 '&
b1 B
b111 E%
b1 G
b1 s
b1 W#
b10 \#
b1 T#
b1 U#
b110 F%
1-
1*
#16000
0-
0*
#17000
b1 F
b1 N
b1 K#
b10 :
b10 d$
b10 5
b10 !&
b10 '&
b1 1
b1 f$
b1 4
b1 &&
b10 B
b1000 E%
b1 %&
b1 )&
b1 *&
b10 G
b10 s
b10 W#
b11 \#
b110111 P#
b10 T#
b111 F%
1-
1*
#18000
0-
0*
#19000
b11 :
b11 d$
b11 5
b11 !&
b11 '&
b10 F
b10 N
b10 K#
b11 B
b10 1
b10 f$
b10 4
b10 &&
b1001 E%
b11 G
b11 s
b11 W#
b100 \#
b100110111 P#
b11 T#
b10 %&
b10 )&
b10 *&
b1000 F%
1-
1*
#20000
0-
0*
#21000
b0 F
b0 N
b0 K#
b0 :
b0 d$
b0 5
b0 !&
b0 '&
b0 1
b0 f$
b0 4
b0 &&
b0 B
1,"
b1010 E%
b0 %&
b0 )&
b11 *&
b0 \#
b0 ]#
b0 G
b0 s
b0 W#
0Z#
b100000000100110111 P#
b100 T#
b1001 F%
1-
1*
#22000
0-
0*
#23000
b110111 F
b110111 N
b110111 K#
b110111 1
b110111 f$
b110111 4
b110111 &&
b1011 E%
b100000000100110111 +"
b100000000100110111 q"
b100000000100110111 Y#
1-"
b0 T#
b0 U#
b110111 %&
b110111 )&
b0 *&
b1010 F%
1-
1*
#24000
0-
0*
#25000
bx o"
xl"
b1100 E%
b1 t"
bx m"
b100000000100110111 !"
b100000000100110111 x"
b100000000100110111 c#
1""
0-"
b0 P#
b1011 F%
1-
1*
#26000
0-
0*
#27000
b100000000000000000 e#
b10 h#
b1101 E%
0""
b100000000100110111 j#
1i#
b1100 F%
1-
1*
#28000
0-
0*
#29000
b1110 E%
b1000 k#
b100 n
b100 p"
b100 l#
0i#
1o
b1101 F%
1-
1*
#30000
0-
0*
#31000
0l"
b1 n"
b100 o"
b1111 E%
b10 y"
0o
b1110 F%
1-
1*
#32000
0-
0*
#33000
b0 ."
b0 \"
b0 &#
b0 O$
b0 /"
b0 ]"
b0 %#
b0 N$
b0 <"
b0 ^"
b0 $#
b0 M$
b0 ="
b0 _"
b0 ##
b0 L$
b0 2"
b0 X"
b0 &$
b0 3"
b0 Y"
b0 %$
0i
b0 h
b0 e"
b0 t#
b0 g
b0 d"
b0 u#
b0 8"
b0 V"
b0 q#
0l
b0 k
b0 g"
b0 r#
b0 j
b0 f"
b0 s#
b100 9"
b100 W"
b100 p#
b10 ;"
b10 Z"
b10 n#
b10 $$
b100000000000000000 ?"
b100000000000000000 ["
b100000000000000000 (#
b100000000000000000 Q$
b100000000000000000 h"
b100000000100110111 i"
b0 0"
b0 U"
b0 )#
b0 '$
b0 S$
b0 j"
b100000000100110111 k"
16"
15"
07"
11"
0,"
b10000 E%
b1 s"
04"
0#"
b100000000100110111 %"
b100000000100110111 `"
b100000000100110111 v"
b0 >"
b0 R"
b0 #$
b0 R$
b0 $"
b0 T"
b0 u"
1&"
b100 p
b100 w"
b100 L#
1q
b1111 F%
1-
1*
#34000
0-
0*
#35000
b1 W$
0*#
b10 X$
0_
0H$
b0 I$
06"
05"
01"
b10001 E%
b0 |#
0:$
b10 :"
b10 S"
b10 '#
b10 o#
b10 P$
b10 a
b10 a"
b10 .$
b10 B$
b100 [#
1Z#
0&"
0q
b10000 F%
1-
1*
#36000
0-
0*
#37000
b0 W$
b100 :
b100 d$
b100 5
b100 !&
b100 '&
b1 X$
b100 B
b100000000000000000 E"
b100000000000000000 Q"
b100000000000000000 "#
b100000000000000000 "$
b100000000000000000 K$
b10010 E%
b100 G
b100 s
b100 W#
b1 \#
b1 ]#
b1 F"
b1 I"
b1 !#
b1 !$
b1 J$
b1 R
b1 M"
b1 Y$
b0 Q
b0 K"
b0 ]$
b0 T
b0 L"
b0 [$
b100000000000000000 U
b100000000000000000 O"
b100000000000000000 Z$
b0 S
b0 N"
b0 \$
b0 P
b0 J"
b0 ^$
1G"
1V
b10001 F%
1-
1*
#38000
0-
0*
#39000
b101 :
b101 d$
b101 5
b101 !&
b101 '&
b11101111 F
b11101111 N
b11101111 K#
b0 E"
b0 Q"
b0 "#
b0 "$
b0 K$
b101 B
b11101111 1
b11101111 f$
b11101111 4
b11101111 &&
b10011 E%
b100000000000000000 }#
0G"
0V
b101 G
b101 s
b101 W#
b10 \#
b1 T#
b1 U#
b11101111 %&
b11101111 )&
b100 *&
b10010 F%
b10000 _$
b10000 A#
1-
1*
#40000
0-
0*
#41000
b0 F
b0 N
b0 K#
b110 :
b110 d$
b110 5
b110 !&
b110 '&
x*#
b0 1
b0 f$
b0 4
b0 &&
b110 B
b11 /$
x_
xH$
bx I$
b10100 E%
b0 %&
b0 )&
b101 *&
b110 G
b110 s
b110 W#
b11 \#
b11101111 P#
b10 T#
b100000000000000000 X
b100000000000000000 w#
b100000000000000000 A$
b1 Y
b1 v#
b1 @$
09$
08$
07$
06$
05$
04$
03$
01$
00$
02$
b10 Z
b10 x#
b10 ?$
1[
1:$
bx |#
bx }#
b10 ;$
b10011 F%
0F$
b0 G$
0D$
b0 E$
b1 <$
1-
1*
#42000
0-
0*
#43000
b111 :
b111 d$
b111 5
b111 !&
b111 '&
b11010000 F
b11010000 N
b11010000 K#
b111 B
b11010000 1
b11010000 f$
b11010000 4
b11010000 &&
b10101 E%
0[
b111 G
b111 s
b111 W#
b100 \#
b11 T#
b11010000 %&
b11010000 )&
b110 *&
b10100 F%
1-
1*
#44000
0-
0*
#45000
b1111111 F
b1111111 N
b1111111 K#
b0 :
b0 d$
b0 5
b0 !&
b0 '&
b1111111 1
b1111111 f$
b1111111 4
b1111111 &&
b0 B
1,"
b10110 E%
b1111111 %&
b1111111 )&
b111 *&
b0 \#
b0 ]#
b0 G
b0 s
b0 W#
0Z#
b110100000000000011101111 P#
b100 T#
b10101 F%
1-
1*
#46000
0-
0*
#47000
b110111 F
b110111 N
b110111 K#
b110111 1
b110111 f$
b110111 4
b110111 &&
b10111 E%
b1111111110100000000000011101111 +"
b1111111110100000000000011101111 q"
b1111111110100000000000011101111 Y#
1-"
b0 T#
b0 U#
b110111 %&
b110111 )&
b0 *&
b10110 F%
1-
1*
#48000
0-
0*
#49000
bx o"
xl"
b11000 E%
b10 t"
bx m"
b1111111110100000000000011101111 !"
b1111111110100000000000011101111 x"
b1111111110100000000000011101111 c#
1""
0-"
b0 P#
b10111 F%
1-
1*
#50000
0-
0*
#51000
b111111111100 e#
b111111100000 h#
b11001 E%
0""
b1111111110100000000000011101111 j#
1i#
b11000 F%
1-
1*
#52000
0-
0*
#53000
b11010 E%
1m
b1000000000100 k#
b1000000000000 n
b1000000000000 p"
b1000000000000 l#
0i#
1o
b11001 F%
1-
1*
#54000
0-
0*
#55000
0l"
b10 n"
b100000000100110111 m"
b0 o"
b11011 E%
b11 y"
0o
b11010 F%
1-
1*
#56000
0-
0*
#57000
b11101 8"
b11101 V"
b11101 q#
b0 9"
b0 W"
b0 p#
b1 ;"
b1 Z"
b1 n#
b1 $$
b111111111100 ?"
b111111111100 ["
b111111111100 (#
b111111111100 Q$
b111111111100 h"
b1111111110100000000000011101111 i"
b10 0"
b10 U"
b10 )#
b10 '$
b10 S$
b10 j"
b1111111110100000000000011101111 k"
16"
15"
11"
0,"
b11100 E%
b10 s"
14"
1#"
b1111111110100000000000011101111 %"
b1111111110100000000000011101111 `"
b1111111110100000000000011101111 v"
b100 >"
b100 R"
b100 #$
b100 R$
b100 $"
b100 T"
b100 u"
1&"
b1000000000000 p
b1000000000000 w"
b1000000000000 L#
1q
b11011 F%
1-
1*
#58000
0-
0*
#59000
b1 W$
0*#
b10 X$
0_
0H$
b10 I$
06"
05"
01"
b11101 E%
1{#
b100 z#
b10 |#
0:$
b11 :"
b11 S"
b11 '#
b11 o#
b11 P$
b11 a
b11 a"
b11 .$
b11 B$
b1000000000000 [#
1Z#
0&"
0q
b11100 F%
1-
1*
#60000
0-
0*
#61000
b0 W$
b1000000000000 5
b1000000000000 !&
b1000000000000 '&
b1 X$
b1000000000000 B
b1000000000000 H"
b1000000000000 P"
b1000000000000 ~#
b1000 E"
b1000 Q"
b1000 "#
b1000 "$
b1000 K$
b11110 E%
b1000000000000 G
b1000000000000 s
b1000000000000 W#
b1 \#
b1 ]#
b10 F"
b10 I"
b10 !#
b10 !$
b10 J$
b10 R
b10 M"
b10 Y$
b111111111100 U
b111111111100 O"
b111111111100 Z$
b100 S
b100 N"
b100 \$
b10 P
b10 J"
b10 ^$
1G"
1V
b11101 F%
1-
1*
#62000
0-
0*
#63000
b1 :
b1 d$
b1000000000001 5
b1000000000001 !&
b1000000000001 '&
b10011 F
b10011 N
b10011 K#
b0 H"
b0 P"
b0 ~#
b0 E"
b0 Q"
b0 "#
b0 "$
b0 K$
b1000000000001 B
b10011 1
b10011 f$
b10011 4
b10011 &&
b11111 E%
b1000 }#
0G"
0V
b1000000000001 G
b1000000000001 s
b1000000000001 W#
b10 \#
b1 T#
b1 U#
b10011 %&
b10011 )&
b1000000000000 *&
b11110 F%
b10000 _$
b10000 A#
1-
1*
#64000
0-
0*
#65000
b101 F
b101 N
b101 K#
b10 :
b10 d$
b1000000000010 5
b1000000000010 !&
b1000000000010 '&
x*#
b101 1
b101 f$
b101 4
b101 &&
b1000000000010 B
b100 /$
x_
xH$
bx I$
b100000 E%
b101 %&
b101 )&
b1000000000001 *&
b1000000000010 G
b1000000000010 s
b1000000000010 W#
b11 \#
b10011 P#
b10 T#
b1000 X
b1000 w#
b1000 A$
b10 Y
b10 v#
b10 @$
b1 Z
b1 x#
b1 ?$
1[
1:$
bx |#
b0 z#
bx }#
0{#
b11 ;$
b11111 F%
1D$
b10 E$
b10 <$
1-
1*
#66000
0-
0*
#67000
b11 :
b11 d$
b1000000000011 5
b1000000000011 !&
b1000000000011 '&
b0 F
b0 N
b0 K#
b1000000000011 B
b0 1
b0 f$
b0 4
b0 &&
b100001 E%
0[
b1000000000011 G
b1000000000011 s
b1000000000011 W#
b100 \#
b10100010011 P#
b11 T#
b0 %&
b0 )&
b1000000000010 *&
b100000 F%
1-
1*
#68000
0-
0*
#69000
b0 :
b0 d$
b0 5
b0 !&
b0 '&
b0 B
1,"
b100010 E%
b1000000000011 *&
b0 \#
b0 ]#
b0 G
b0 s
b0 W#
0Z#
b100 T#
b100001 F%
1-
1*
#70000
0-
0*
#71000
b110111 F
b110111 N
b110111 K#
b110111 1
b110111 f$
b110111 4
b110111 &&
b100011 E%
b10100010011 +"
b10100010011 q"
b10100010011 Y#
1-"
b0 T#
b0 U#
b110111 %&
b110111 )&
b0 *&
b100010 F%
1-
1*
#72000
0-
0*
#73000
bx o"
xl"
b100100 E%
b11 t"
bx m"
b10100010011 !"
b10100010011 x"
b10100010011 c#
1""
0-"
b0 P#
b100011 F%
1-
1*
#74000
0-
0*
#75000
b0 e#
b1010 h#
b100101 E%
0""
b10100010011 j#
1i#
b100100 F%
1-
1*
#76000
0-
0*
#77000
b100110 E%
0m
b1000000001000 k#
b1000000000100 n
b1000000000100 p"
b1000000000100 l#
0i#
1o
b100101 F%
1-
1*
#78000
0-
0*
#79000
0l"
b11 n"
b1111111110100000000000011101111 m"
b100 o"
b100111 E%
b100 y"
0o
b100110 F%
1-
1*
#80000
0-
0*
#81000
b0 8"
b0 V"
b0 q#
b1010 ;"
b1010 Z"
b1010 n#
b1010 $$
b0 ?"
b0 ["
b0 (#
b0 Q$
b0 h"
b10100010011 i"
b10010 0"
b10010 U"
b10010 )#
b10010 '$
b10010 S$
b10010 j"
b10100010011 k"
16"
15"
11"
0,"
b101000 E%
b11 s"
04"
0#"
b10100010011 %"
b10100010011 `"
b10100010011 v"
b1000000000000 >"
b1000000000000 R"
b1000000000000 #$
b1000000000000 R$
b1000000000000 $"
b1000000000000 T"
b1000000000000 u"
1&"
b1000000000100 p
b1000000000100 w"
b1000000000100 L#
1q
b100111 F%
1-
1*
#82000
0-
0*
#83000
b1 W$
0*#
b10 X$
0_
0H$
b10010 I$
06"
05"
01"
b101001 E%
b1000000000000 z#
b10010 |#
0:$
b100 :"
b100 S"
b100 '#
b100 o#
b100 P$
b100 a
b100 a"
b100 .$
b100 B$
b1000000000100 [#
1Z#
0&"
0q
b101000 F%
1-
1*
#84000
0-
0*
#85000
b0 W$
b100 :
b100 d$
b1000000000100 5
b1000000000100 !&
b1000000000100 '&
b1 X$
b1000000000100 B
b101010 E%
b1000000000100 G
b1000000000100 s
b1000000000100 W#
b1 \#
b1 ]#
b11 F"
b11 I"
b11 !#
b11 !$
b11 J$
b11 R
b11 M"
b11 Y$
b0 U
b0 O"
b0 Z$
b1000000000000 S
b1000000000000 N"
b1000000000000 \$
b10010 P
b10010 J"
b10010 ^$
1G"
1V
b101001 F%
1-
1*
#86000
0-
0*
#87000
b101 :
b101 d$
b1000000000101 5
b1000000000101 !&
b1000000000101 '&
b1100111 F
b1100111 N
b1100111 K#
b1000000000101 B
b1100111 1
b1100111 f$
b1100111 4
b1100111 &&
b101011 E%
b0 }#
0G"
0V
b1000000000101 G
b1000000000101 s
b1000000000101 W#
b10 \#
b1 T#
b1 U#
b1100111 %&
b1100111 )&
b1000000000100 *&
b101010 F%
b10000 _$
b10000 A#
1-
1*
#88000
0-
0*
#89000
b10000000 F
b10000000 N
b10000000 K#
b110 :
b110 d$
b1000000000110 5
b1000000000110 !&
b1000000000110 '&
x*#
b10000000 1
b10000000 f$
b10000000 4
b10000000 &&
b1000000000110 B
b101 /$
x_
xH$
bx I$
b101100 E%
b10000000 %&
b10000000 )&
b1000000000101 *&
b1000000000110 G
b1000000000110 s
b1000000000110 W#
b11 \#
b1100111 P#
b10 T#
b0 X
b0 w#
b0 A$
b11 Y
b11 v#
b11 @$
19$
b1010 Z
b1010 x#
b1010 ?$
1[
1:$
bx |#
b0 z#
bx }#
b100 ;$
b101011 F%
b10010 G$
0D$
b10010 E$
b11 <$
1-
1*
#90000
0-
0*
#91000
b111 :
b111 d$
b1000000000111 5
b1000000000111 !&
b1000000000111 '&
b0 F
b0 N
b0 K#
b1000000000111 B
b0 1
b0 f$
b0 4
b0 &&
b101101 E%
0[
b1000000000111 G
b1000000000111 s
b1000000000111 W#
b100 \#
b1000000001100111 P#
b11 T#
b0 %&
b0 )&
b1000000000110 *&
b101100 F%
1-
1*
#92000
0-
0*
#93000
b0 :
b0 d$
b0 5
b0 !&
b0 '&
b0 B
1,"
b101110 E%
b1000000000111 *&
b0 \#
b0 ]#
b0 G
b0 s
b0 W#
0Z#
b100 T#
b101101 F%
1-
1*
#94000
0-
0*
#95000
b110111 F
b110111 N
b110111 K#
b110111 1
b110111 f$
b110111 4
b110111 &&
b101111 E%
b1000000001100111 +"
b1000000001100111 q"
b1000000001100111 Y#
1-"
b0 T#
b0 U#
b110111 %&
b110111 )&
b0 *&
b101110 F%
1-
1*
#96000
0-
0*
#97000
bx o"
xl"
b110000 E%
b100 t"
bx m"
b1000000001100111 !"
b1000000001100111 x"
b1000000001100111 c#
1""
0-"
b0 P#
b101111 F%
1-
1*
#98000
0-
0*
#99000
b1000000000000000 e#
b0 h#
b110001 E%
0""
b1000000001100111 j#
1i#
b110000 F%
1-
1*
#100000
0-
0*
#101000
b110010 E%
b1000000001100 k#
b1000000001000 n
b1000000001000 p"
b1000000001000 l#
0i#
1o
b110001 F%
1-
1*
#102000
0-
0*
#103000
0l"
b100 n"
b1000 o"
b110011 E%
b101 y"
0o
b110010 F%
1-
1*
#104000
0-
0*
#105000
b1000 /"
b1000 ]"
b1000 %#
b1000 N$
b1000 k
b1000 g"
b1000 r#
b1 9"
b1 W"
b1 p#
b0 ;"
b0 Z"
b0 n#
b0 $$
b1000000001100111 i"
b11 0"
b11 U"
b11 )#
b11 '$
b11 S$
b11 j"
b1000000001100111 k"
06"
15"
11"
0,"
b110100 E%
b100 s"
b1000000001100111 %"
b1000000001100111 `"
b1000000001100111 v"
b1000000000100 >"
b1000000000100 R"
b1000000000100 #$
b1000000000100 R$
b1000000000100 $"
b1000000000100 T"
b1000000000100 u"
1&"
b1000000001000 p
b1000000001000 w"
b1000000001000 L#
1q
b110011 F%
1-
1*
#106000
0-
0*
#107000
b1 W$
0*#
b10 X$
0_
0H$
b11 I$
05"
01"
b110101 E%
b1000000000100 z#
b11 |#
0:$
b101 :"
b101 S"
b101 '#
b101 o#
b101 P$
b101 a
b101 a"
b101 .$
b101 B$
b1000000001000 [#
1Z#
0&"
0q
b110100 F%
1-
1*
#108000
0-
0*
#109000
b0 W$
b1000000001000 5
b1000000001000 !&
b1000000001000 '&
b1 X$
b1 K%
b1 d%
b1000000001000 B
b1000 H"
b1000 P"
b1000 ~#
b1000000001000 E"
b1000000001000 Q"
b1000000001000 "#
b1000000001000 "$
b1000000001000 K$
b0 E%
1C%
b1000000001000 G
b1000000001000 s
b1000000001000 W#
b1 \#
b1 ]#
b100 F"
b100 I"
b100 !#
b100 !$
b100 J$
b100 R
b100 M"
b100 Y$
b1000 T
b1000 L"
b1000 [$
b1000000000100 S
b1000000000100 N"
b1000000000100 \$
b11 P
b11 J"
b11 ^$
1G"
1V
b110101 F%
1-
1*
#110000
0-
0*
#111000
b1 :
b1 d$
b1000000001001 5
b1000000001001 !&
b1000000001001 '&
b0 F
b0 N
b0 K#
b0 H"
b0 P"
b0 ~#
b0 E"
b0 Q"
b0 "#
b0 "$
b0 K$
b1000000001001 B
b0 1
b0 f$
b0 4
b0 &&
b1 E%
0C%
b1 K%
b1 d%
b1000000001000 }#
0G"
0V
b1000000001001 G
b1000000001001 s
b1000000001001 W#
b10 \#
b1 T#
b1 U#
b0 %&
b0 )&
b1000000001000 *&
b0 F%
b1 P%
b1 k%
b10000 _$
b10000 A#
1-
1*
#112000
0-
0*
#113000
b10 :
b10 d$
b1000000001010 5
b1000000001010 !&
b1000000001010 '&
1+$
x*#
b1000000001010 B
1V$
b110 /$
x_
xH$
bx I$
b10 E%
b1000000001001 *&
b1000000001010 G
b1000000001010 s
b1000000001010 W#
b11 \#
b10 T#
b1000000001000 X
b1000000001000 w#
b1000000001000 A$
b100 Y
b100 v#
b100 @$
09$
b0 Z
b0 x#
b0 ?$
1[
b1000 ^
b1000 g#
b1000 =$
1D"
1:$
bx |#
b0 z#
bx }#
b101 ;$
b1 F%
1D$
b11 E$
b100 <$
1-
1*
#114000
0-
0*
#115000
0+$
0*#
0V$
b10 /$
0_
0H$
b0 I$
1,"
b10100010011 m"
b0 o"
b111 n"
b11 E%
0[
0D"
b1 :"
b1 S"
b1 '#
b1 o#
b1 P$
b1 a
b1 a"
b1 .$
b1 B$
b0 |#
b100000000000000000 }#
b1 ;$
0Z#
b0 \#
b0 ]#
b0 T#
b0 U#
b0 t"
b0 y"
b0 s"
1r"
b1100 k#
b1000 n
b1000 p"
b1000 l#
1o
b1000000001010 *&
b10 F%
b100000 y#
b10000 C$
b10000 `$
b10000 B#
b1000 {"
1-
1*
#116000
0-
0*
#117000
b0 :
b0 d$
b0 5
b0 !&
b0 '&
b0 n"
bx m"
b1000 o"
b0 B
b100 E%
0o
0r"
b1 y"
b0 G
b0 s
b0 W#
b11 F%
1-
1*
#118000
0-
0*
#119000
b110111 F
b110111 N
b110111 K#
0,"
b110111 1
b110111 f$
b110111 4
b110111 &&
b101 E%
b1000 p
b1000 w"
b1000 L#
1q
b110111 %&
b110111 )&
b0 *&
b100 F%
1-
1*
#120000
0-
0*
#121000
b110 E%
0q
b1000 [#
1Z#
b101 F%
1-
1*
#122000
0-
0*
#123000
b1000 5
b1000 !&
b1000 '&
b1000 B
b111 E%
b1000 G
b1000 s
b1000 W#
b1 \#
b1 ]#
b110 F%
1-
1*
#124000
0-
0*
#125000
b10011 F
b10011 N
b10011 K#
b1 :
b1 d$
b1001 5
b1001 !&
b1001 '&
b10011 1
b10011 f$
b10011 4
b10011 &&
b1001 B
b1000 E%
b10011 %&
b10011 )&
b1000 *&
b1001 G
b1001 s
b1001 W#
b10 \#
b1 T#
b1 U#
b111 F%
1-
1*
#126000
0-
0*
#127000
b10 :
b10 d$
b1010 5
b1010 !&
b1010 '&
b101 F
b101 N
b101 K#
b1010 B
b101 1
b101 f$
b101 4
b101 &&
b1001 E%
b1010 G
b1010 s
b1010 W#
b11 \#
b10011 P#
b10 T#
b101 %&
b101 )&
b1001 *&
b1000 F%
1-
1*
#128000
0-
0*
#129000
b11110000 F
b11110000 N
b11110000 K#
b11 :
b11 d$
b1011 5
b1011 !&
b1011 '&
b11110000 1
b11110000 f$
b11110000 4
b11110000 &&
b1011 B
b1010 E%
b11110000 %&
b11110000 )&
b1010 *&
b1011 G
b1011 s
b1011 W#
b100 \#
b10100010011 P#
b11 T#
b1001 F%
1-
1*
#130000
0-
0*
#131000
b0 :
b0 d$
b0 5
b0 !&
b0 '&
b1111 F
b1111 N
b1111 K#
b0 B
1,"
b1111 1
b1111 f$
b1111 4
b1111 &&
b1011 E%
b0 \#
b0 ]#
b0 G
b0 s
b0 W#
0Z#
b111100000000010100010011 P#
b100 T#
b1111 %&
b1111 )&
b1011 *&
b1010 F%
1-
1*
#132000
0-
0*
#133000
b110111 F
b110111 N
b110111 K#
b110111 1
b110111 f$
b110111 4
b110111 &&
b1100 E%
b110111 %&
b110111 )&
b0 *&
b1111111100000000010100010011 +"
b1111111100000000010100010011 q"
b1111111100000000010100010011 Y#
1-"
b0 T#
b0 U#
b1011 F%
1-
1*
#134000
0-
0*
#135000
b100 o"
0l"
b1101 E%
0-"
b0 P#
b1 t"
b1000000001100111 m"
b1111111100000000010100010011 !"
b1111111100000000010100010011 x"
b1111111100000000010100010011 c#
1""
b1100 F%
1-
1*
#136000
0-
0*
#137000
b100011111110 e#
b11101010 h#
b1110 E%
b1111111100000000010100010011 j#
1i#
0""
b1101 F%
1-
1*
#138000
0-
0*
#139000
b1111 E%
b10000 k#
b1100 n
b1100 p"
b1100 l#
0i#
1o
b1110 F%
1-
1*
#140000
0-
0*
#141000
b1 n"
bx m"
b1100 o"
b10000 E%
0o
b10 y"
b1111 F%
1-
1*
#142000
0-
0*
#143000
b0 /"
b0 ]"
b0 %#
b0 N$
16"
b11111 8"
b11111 V"
b11111 q#
b0 k
b0 g"
b0 r#
b0 9"
b0 W"
b0 p#
b1010 ;"
b1010 Z"
b1010 n#
b1010 $$
b11111111 ?"
b11111111 ["
b11111111 (#
b11111111 Q$
b11111111 h"
b1111111100000000010100010011 i"
b10010 0"
b10010 U"
b10010 )#
b10010 '$
b10010 S$
b10010 j"
b1111111100000000010100010011 k"
15"
11"
0,"
b10001 E%
b1 s"
b1111111100000000010100010011 %"
b1111111100000000010100010011 `"
b1111111100000000010100010011 v"
b1000 >"
b1000 R"
b1000 #$
b1000 R$
b1000 $"
b1000 T"
b1000 u"
1&"
b1100 p
b1100 w"
b1100 L#
1q
b10000 F%
1-
1*
#144000
0-
0*
#145000
b1 W$
b10 X$
06"
05"
01"
b10010 I$
b10010 E%
0&"
0q
b1100 [#
1Z#
b1000 z#
b10010 |#
0:$
b10 :"
b10 S"
b10 '#
b10 o#
b10 P$
b10 a
b10 a"
b10 .$
b10 B$
b10001 F%
1-
1*
#146000
0-
0*
#147000
b0 W$
b1 X$
b100 :
b100 d$
b1100 5
b1100 !&
b1100 '&
b11111111 E"
b11111111 Q"
b11111111 "#
b11111111 "$
b11111111 K$
b1100 B
b10011 E%
b1 F"
b1 I"
b1 !#
b1 !$
b1 J$
b1 R
b1 M"
b1 Y$
b0 T
b0 L"
b0 [$
b11111111 U
b11111111 O"
b11111111 Z$
b1000 S
b1000 N"
b1000 \$
b10010 P
b10010 J"
b10010 ^$
1G"
1V
b1100 G
b1100 s
b1100 W#
b1 \#
b1 ]#
b10010 F%
1-
1*
#148000
0-
0*
#149000
b10110111 F
b10110111 N
b10110111 K#
b101 :
b101 d$
b1101 5
b1101 !&
b1101 '&
b10110111 1
b10110111 f$
b10110111 4
b10110111 &&
b1101 B
b0 E"
b0 Q"
b0 "#
b0 "$
b0 K$
b10100 E%
b10110111 %&
b10110111 )&
b1100 *&
b1101 G
b1101 s
b1101 W#
b10 \#
b1 T#
b1 U#
0G"
0V
b11111111 }#
b10011 F%
b10000 A#
b10000 _$
1-
1*
#150000
0-
0*
#151000
b110 :
b110 d$
b1110 5
b1110 !&
b1110 '&
b110 F
b110 N
b110 K#
b11 /$
b10 I$
b1110 B
b110 1
b110 f$
b110 4
b110 &&
b10101 E%
b11111111 X
b11111111 w#
b11111111 A$
b1 Y
b1 v#
b1 @$
19$
b1010 Z
b1010 x#
b1010 ?$
1[
1:$
b10 |#
b0 z#
b1000 }#
b10 ;$
b1110 G
b1110 s
b1110 W#
b11 \#
b10110111 P#
b10 T#
b110 %&
b110 )&
b1101 *&
b10100 F%
0D$
b10010 E$
b101 <$
1-
1*
#152000
0-
0*
#153000
b11 F
b11 N
b11 K#
b111 :
b111 d$
b1111 5
b1111 !&
b1111 '&
b11 1
b11 f$
b11 4
b11 &&
b1111 B
b10110 E%
b11 %&
b11 )&
b1110 *&
b1111 G
b1111 s
b1111 W#
b100 \#
b11010110111 P#
b11 T#
0[
b10101 F%
1-
1*
#154000
0-
0*
#155000
b0 :
b0 d$
b0 5
b0 !&
b0 '&
b0 F
b0 N
b0 K#
b0 B
1,"
b0 1
b0 f$
b0 4
b0 &&
b10111 E%
b0 \#
b0 ]#
b0 G
b0 s
b0 W#
0Z#
b110000011010110111 P#
b100 T#
b0 %&
b0 )&
b1111 *&
b10110 F%
1-
1*
#156000
0-
0*
#157000
b110111 F
b110111 N
b110111 K#
b110111 1
b110111 f$
b110111 4
b110111 &&
b11000 E%
b110111 %&
b110111 )&
b0 *&
b110000011010110111 +"
b110000011010110111 q"
b110000011010110111 Y#
1-"
b0 T#
b0 U#
b10111 F%
1-
1*
#158000
0-
0*
#159000
b0 o"
1l"
b11001 E%
0-"
b0 P#
b10 t"
b10100010011 m"
b110000011010110111 !"
b110000011010110111 x"
b110000011010110111 c#
1""
b11000 F%
1-
1*
#160000
0-
0*
#161000
b110000000000000000 e#
b100000001100 h#
b11010 E%
b110000011010110111 j#
1i#
0""
b11001 F%
1-
1*
#162000
0-
0*
#163000
b11011 E%
b10100 k#
b10000 n
b10000 p"
b10000 l#
0i#
1o
b11010 F%
1-
1*
#164000
0-
0*
#165000
0l"
b10 n"
bx m"
b10000 o"
b11100 E%
0o
b11 y"
b11011 F%
1-
1*
#166000
0-
0*
#167000
b0 8"
b0 V"
b0 q#
b110 9"
b110 W"
b110 p#
b1101 ;"
b1101 Z"
b1101 n#
b1101 $$
b110000000000000000 ?"
b110000000000000000 ["
b110000000000000000 (#
b110000000000000000 Q$
b110000000000000000 h"
b110000011010110111 i"
b0 0"
b0 U"
b0 )#
b0 '$
b0 S$
b0 j"
b110000011010110111 k"
16"
15"
11"
0,"
b11101 E%
b10 s"
b110000011010110111 %"
b110000011010110111 `"
b110000011010110111 v"
b1100 >"
b1100 R"
b1100 #$
b1100 R$
b1100 $"
b1100 T"
b1100 u"
1&"
b10000 p
b10000 w"
b10000 L#
1q
b11100 F%
1-
1*
#168000
0-
0*
#169000
b1 W$
b10 X$
06"
05"
01"
b0 I$
b11110 E%
0&"
0q
b10000 [#
1Z#
b1100 z#
b0 |#
0:$
b11 :"
b11 S"
b11 '#
b11 o#
b11 P$
b11 a
b11 a"
b11 .$
b11 B$
b11101 F%
1-
1*
#170000
0-
0*
#171000
b0 W$
b1 X$
b10000 5
b10000 !&
b10000 '&
b110000000000000000 E"
b110000000000000000 Q"
b110000000000000000 "#
b110000000000000000 "$
b110000000000000000 K$
b10000 B
b11111 E%
b10 F"
b10 I"
b10 !#
b10 !$
b10 J$
b10 R
b10 M"
b10 Y$
b110000000000000000 U
b110000000000000000 O"
b110000000000000000 Z$
b1100 S
b1100 N"
b1100 \$
b0 P
b0 J"
b0 ^$
1G"
1V
b10000 G
b10000 s
b10000 W#
b1 \#
b1 ]#
b11110 F%
1-
1*
#172000
0-
0*
#173000
b100011 F
b100011 N
b100011 K#
b1 :
b1 d$
b10001 5
b10001 !&
b10001 '&
b100011 1
b100011 f$
b100011 4
b100011 &&
b10001 B
b0 E"
b0 Q"
b0 "#
b0 "$
b0 K$
b100000 E%
b100011 %&
b100011 )&
b10000 *&
b10001 G
b10001 s
b10001 W#
b10 \#
b1 T#
b1 U#
0G"
0V
b110000000000000000 }#
b11111 F%
b10000 A#
b10000 _$
1-
1*
#174000
0-
0*
#175000
b10 :
b10 d$
b10010 5
b10010 !&
b10010 '&
b10000010 F
b10000010 N
b10000010 K#
b100 /$
b10010 I$
b10010 B
b10000010 1
b10000010 f$
b10000010 4
b10000010 &&
b100001 E%
b110000000000000000 X
b110000000000000000 w#
b110000000000000000 A$
b10 Y
b10 v#
b10 @$
09$
17$
b1101 Z
b1101 x#
b1101 ?$
1[
1:$
b10010 |#
b0 z#
b0 }#
b11 ;$
b10010 G
b10010 s
b10010 W#
b11 \#
b100011 P#
b10 T#
b10000010 %&
b10000010 )&
b10001 *&
b100000 F%
b0 G$
b0 E$
b110 <$
1-
1*
#176000
0-
0*
#177000
b10100110 F
b10100110 N
b10100110 K#
b11 :
b11 d$
b10011 5
b10011 !&
b10011 '&
b10100110 1
b10100110 f$
b10100110 4
b10100110 &&
b10011 B
b100010 E%
b10100110 %&
b10100110 )&
b10010 *&
b10011 G
b10011 s
b10011 W#
b100 \#
b1000001000100011 P#
b11 T#
0[
b100001 F%
1-
1*
#178000
0-
0*
#179000
b0 :
b0 d$
b0 5
b0 !&
b0 '&
b0 F
b0 N
b0 K#
b0 B
1,"
b0 1
b0 f$
b0 4
b0 &&
b100011 E%
b0 \#
b0 ]#
b0 G
b0 s
b0 W#
0Z#
b101001101000001000100011 P#
b100 T#
b0 %&
b0 )&
b10011 *&
b100010 F%
1-
1*
#180000
0-
0*
#181000
b110111 F
b110111 N
b110111 K#
b110111 1
b110111 f$
b110111 4
b110111 &&
b100100 E%
b110111 %&
b110111 )&
b0 *&
b101001101000001000100011 +"
b101001101000001000100011 q"
b101001101000001000100011 Y#
1-"
b0 T#
b0 U#
b100011 F%
1-
1*
#182000
0-
0*
#183000
b100 o"
1l"
b100101 E%
0-"
b0 P#
b11 t"
b1000000001100111 m"
b101001101000001000100011 !"
b101001101000001000100011 x"
b101001101000001000100011 c#
1""
b100100 F%
1-
1*
#184000
0-
0*
#185000
b1101000000000001010 e#
b100 h#
b100110 E%
b101001101000001000100011 j#
1i#
0""
b100101 F%
1-
1*
#186000
0-
0*
#187000
b100111 E%
b11000 k#
b10100 n
b10100 p"
b10100 l#
0i#
1o
b100110 F%
1-
1*
#188000
0-
0*
#189000
0l"
b11 n"
bx m"
b10100 o"
b101000 E%
0o
b100 y"
b100111 F%
1-
1*
#190000
0-
0*
#191000
17"
b11111111 ."
b11111111 \"
b11111111 &#
b11111111 O$
b110000000000000000 /"
b110000000000000000 ]"
b110000000000000000 %#
b110000000000000000 N$
b11111111 h
b11111111 e"
b11111111 t#
b1010 8"
b1010 V"
b1010 q#
b110000000000000000 k
b110000000000000000 g"
b110000000000000000 r#
b1101 9"
b1101 W"
b1101 p#
b100 ;"
b100 Z"
b100 n#
b100 $$
b100 ?"
b100 ["
b100 (#
b100 Q$
b100 h"
b101001101000001000100011 i"
b1111 0"
b1111 U"
b1111 )#
b1111 '$
b1111 S$
b1111 j"
b101001101000001000100011 k"
06"
15"
01"
0,"
b101001 E%
b11 s"
b101001101000001000100011 %"
b101001101000001000100011 `"
b101001101000001000100011 v"
b10000 >"
b10000 R"
b10000 #$
b10000 R$
b10000 $"
b10000 T"
b10000 u"
1&"
b10100 p
b10100 w"
b10100 L#
1q
b101000 F%
1-
1*
#192000
0-
0*
#193000
1*#
05"
07"
1_
1H$
b1111 I$
b101010 E%
0&"
0q
b10100 [#
1Z#
b110000000000000100 ,#
0-#
b1 /#
b10000 z#
b1111 |#
0:$
b100 :"
b100 S"
b100 '#
b100 o#
b100 P$
b100 a
b100 a"
b100 .$
b100 B$
b101001 F%
1-
1*
#194000
0-
0*
#195000
b100 :
b100 d$
b10100 5
b10100 !&
b10100 '&
1H#
0'"
b10100 B
b101011 E%
b1 v
b1 9#
b1 N#
b11111111 x
b11111111 :#
b11111111 O#
b110000000000000100 y
b110000000000000100 8#
b110000000000000100 M#
1w
1@#
b10100 G
b10100 s
b10100 W#
b1 \#
b1 ]#
b101010 F%
1F#
b1111 G#
1-
1*
#196000
0-
0*
#197000
b1101111 F
b1101111 N
b1101111 K#
b101 :
b101 d$
b10101 5
b10101 !&
b10101 '&
b1101111 1
b1101111 f$
b1101111 4
b1101111 &&
b10101 B
0H#
b101100 E%
b1101111 %&
b1101111 )&
b10100 *&
b10101 G
b10101 s
b10101 W#
b10 \#
b1 T#
b1 U#
b11111111 `#
b1 a#
b110000000000000100 _#
1^#
0w
b101011 F%
0D#
b1111 E#
1-
1*
#198000
0-
0*
#199000
b110 :
b110 d$
b10110 5
b10110 !&
b10110 '&
b11110000 F
b11110000 N
b11110000 K#
b10110 B
b11110000 1
b11110000 f$
b11110000 4
b11110000 &&
b101101 E%
b10110 G
b10110 s
b10110 W#
b11 \#
b1101111 P#
b10 T#
b11110000 %&
b11110000 )&
b10101 *&
b101100 F%
1-
1*
#200000
0-
0*
#201000
b10011111 F
b10011111 N
b10011111 K#
b111 :
b111 d$
b10111 5
b10111 !&
b10111 '&
b10011111 1
b10011111 f$
b10011111 4
b10011111 &&
b10111 B
b101110 E%
b10011111 %&
b10011111 )&
b10110 *&
b10111 G
b10111 s
b10111 W#
b100 \#
b1111000001101111 P#
b11 T#
b101101 F%
1-
1*
#202000
0-
0*
#203000
b0 :
b0 d$
b0 5
b0 !&
b0 '&
b11111111 F
b11111111 N
b11111111 K#
b0 B
1,"
b11111111 1
b11111111 f$
b11111111 4
b11111111 &&
b101111 E%
b0 \#
b0 ]#
b0 G
b0 s
b0 W#
0Z#
b100111111111000001101111 P#
b100 T#
b11111111 %&
b11111111 )&
b10111 *&
b101110 F%
1-
1*
#204000
0-
0*
#205000
b110111 F
b110111 N
b110111 K#
b110111 1
b110111 f$
b110111 4
b110111 &&
b110000 E%
b110111 %&
b110111 )&
b0 *&
b11111111100111111111000001101111 +"
b11111111100111111111000001101111 q"
b11111111100111111111000001101111 Y#
1-"
b0 T#
b0 U#
b101111 F%
1-
1*
#206000
0-
0*
#207000
b0 F
b0 N
b0 K#
1x$
1{$
b0 1
b0 f$
b0 4
b0 &&
1<
03
0#&
b100 :
b100 d$
b10000000000000100 5
b10000000000000100 !&
b10000000000000100 '&
10
1@
b11111111 /
b11111111 c$
b11111111 A
b11111111 "&
b11111111 (&
b110000000000000100 B
b1000 o"
0l"
b110001 E%
1D
b11111111 E
b11111111 r
b11111111 X#
b110000000000000100 G
b110000000000000100 s
b110000000000000100 W#
b1 \#
b11 ]#
b1 b#
0-"
b0 P#
b100 t"
b1111111100000000010100010011 m"
b11111111100111111111000001101111 !"
b11111111100111111111000001101111 x"
b11111111100111111111000001101111 c#
1""
b110000 F%
1-
1*
